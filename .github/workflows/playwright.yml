name: Playwright Tests

on:
  workflow_dispatch:
    inputs:
      test_file:
        description: 'Test file to run'
        required: true
        default: 'tests/merchant/507-gercek-mukellef-ekleme.spec.ts'
      backend_url:
        description: 'Backend URL to send results'
        required: true
        default: 'https://otomasyon-arayuz.onrender.com'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Node.js Kurulumu
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Dependencies Y√ºkle
        run: npm install
        
      - name: Playwright Browser'larƒ± Y√ºkle
        run: npx playwright install --with-deps chromium
        
      - name: Test √áalƒ±≈ütƒ±r ve Sonucu Kaydet
        id: test_result
        run: |
          # Test dosyasƒ±nƒ±n varlƒ±ƒüƒ±nƒ± kontrol et
          if [ ! -f "${{ github.event.inputs.test_file }}" ]; then
            echo "‚ùå Test dosyasƒ± bulunamadƒ±: ${{ github.event.inputs.test_file }}"
            echo "üìÅ Mevcut dosyalar:"
            find . -name "*.spec.ts" -type f | head -10
            echo "result=failed" >> $GITHUB_OUTPUT
            echo "message=Test dosyasƒ± bulunamadƒ±" >> $GITHUB_OUTPUT
            echo "output=Test dosyasƒ± bulunamadƒ±: ${{ github.event.inputs.test_file }}" >> $GITHUB_OUTPUT
            exit 1
          fi
          
          echo "‚úÖ Test dosyasƒ± bulundu: ${{ github.event.inputs.test_file }}"
          
          # Test √ßalƒ±≈ütƒ±r ve √ßƒ±ktƒ±yƒ± kaydet
          npx playwright test "${{ github.event.inputs.test_file }}" --reporter=line > test_output.txt 2>&1
          TEST_EXIT_CODE=$?
          
          # Test √ßƒ±ktƒ±sƒ±nƒ± oku
          TEST_OUTPUT=$(cat test_output.txt)
          echo "üìÑ Test √ßƒ±ktƒ±sƒ±:"
          echo "$TEST_OUTPUT"
          
          # Sonucu belirle
          if [ $TEST_EXIT_CODE -eq 0 ]; then
            RESULT="success"
            MESSAGE="Test ba≈üarƒ±yla tamamlandƒ±"
          else
            RESULT="failed"
            MESSAGE="Test ba≈üarƒ±sƒ±z oldu (Exit code: $TEST_EXIT_CODE)"
          fi
          
          # GitHub Actions output'a kaydet
          echo "result=$RESULT" >> $GITHUB_OUTPUT
          echo "message=$MESSAGE" >> $GITHUB_OUTPUT
          echo "output<<EOF" >> $GITHUB_OUTPUT
          echo "$TEST_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Test Sonucunu Backend'e G√∂nder
        run: |
          # Test sonucunu backend'e g√∂nder
          curl -X POST ${{ github.event.inputs.backend_url }}/test-result \
            -H "Content-Type: application/json" \
            -d '{
              "test_file": "${{ github.event.inputs.test_file }}",
              "result": "${{ steps.test_result.outputs.result }}",
              "message": "${{ steps.test_result.outputs.message }}",
              "output": "${{ steps.test_result.outputs.output }}",
              "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%S.000Z")'",
              "workflow_run_id": "${{ github.run_id }}"
            }'
        continue-on-error: true 